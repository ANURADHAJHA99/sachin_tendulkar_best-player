{"version":3,"sources":["webpack:///./src/views/BowlingODI.vue?c999","webpack:///src/views/BowlingODI.vue","webpack:///./src/views/BowlingODI.vue?80e7","webpack:///./src/views/BowlingODI.vue","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./src/components/PlayerDetailsCard.vue","webpack:///./src/views/BowlingODI.vue?c142"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","attrs","person","focusedPlayer","titleText","subTitleText","chartType","chartData","StrikeRateData","data","chartOptions","options","parentStyle","chartContainerStyle","winner","inference","EconomyRateData","MaidenOverData","WicketsRunsConcededData","CatchesTakenData","staticRenderFns","_v","BowlingODIvue_type_script_lang_js_","name","components","Chart","Inference","PlayerDetailsCard","_this","margin","width","display","responsive","scales","xAxes","stacked","maxBarThickness","gridLines","offsetGridLines","color","yAxes","labels","datasets","onClick","evt","item","_index","locationbowlingODI","mounted","economyRateData","Object","values","forEach","player","push","player_name","economy_rate","details","total","sort","t1","t2","map","t","label","backgroundColor","borderWidth","borderColor","hoverBorderWidth","hoverBorderColor","strikeRateData","strike_rate","maidenOverData","maiden_overs","overs","wicketsRunsConcededData","wickets","runs_conceded","catchesTakenData","locationbattingODI","catches_taken","views_BowlingODIvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","fails","__webpack_require__","module","exports","method","arg","call","$export","aFunction","toObject","$sort","test","P","F","undefined","comparefn","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_0__","script","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BowlingODI_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BowlingODI_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n"],"mappings":"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","file":"js/chunk-7a477ae4.dc2fc4d0.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bowling-odi\"},[_vm._m(0),_c('div',{staticClass:\"card\"},[_c('PlayerDetailsCard',{attrs:{\"person\":_vm.focusedPlayer}}),_c('Chart',{attrs:{\"titleText\":\"Bowling Strike Rate\",\"subTitleText\":\"Getting batsman out faster is primary target\",\"chartType\":\"bar\",\"chartData\":_vm.StrikeRateData.data,\"chartOptions\":_vm.StrikeRateData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"winner\":\"Both Michael Bevan & Sachin Tendulkar are winner in the following category\",\"titleText\":\"Bowling strike rate is a measure of how frequently a\\n                     bowler achieves the primary goal of bowling, namely taking wickets \",\"inference\":\"Bowling strike rate\"}}),_c('br')],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Economy Rate\",\"subTitleText\":\"Lesser number of runs conceded symbolizes a good bowler\",\"chartType\":\"bar\",\"chartData\":_vm.EconomyRateData.data,\"chartOptions\":_vm.EconomyRateData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"winner\":\"Brian Lara is the winner in the following category.\",\"inference\":\"Average runs conceded\",\"titleText\":\"Economy rate is the average number of runs conceded per over\\n                    in cricket. The calculation is (Econ = Runs/Overs bowled).\"}}),_c('br')],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Average Maiden Overs\",\"subTitleText\":\"Bowling a maiden over in ODI is very important and difficult\",\"chartType\":\"bar\",\"chartData\":_vm.MaidenOverData.data,\"chartOptions\":_vm.MaidenOverData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('br'),_c('Inference',{attrs:{\"winner\":\"Sir Viv Richards & Sachin Tendulkar are the winner in the following category\",\"titleText\":\"A maiden over is one in which no  runs are scored.\",\"inference\":\"High no. of Maiden over\"}})],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Bowling Average\",\"subTitleText\":\"Lower the bowling average is, the better the bowler is performing\",\"chartType\":\"bar\",\"chartData\":_vm.WicketsRunsConcededData.data,\"chartOptions\":_vm.WicketsRunsConcededData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"winner\":\"Sachin Tendulkar & Michael Bevan are the winner in the following category.\",\"inference\":\"Average runs conceded/Bowling Average\",\"titleText\":\"Number of wickets taken for runs  conceded in all matches.\"}}),_c('br')],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Catches Taken\",\"subTitleText\":\"More catches taken symbolizes a good fielder\",\"chartType\":\"bar\",\"chartData\":_vm.CatchesTakenData.data,\"chartOptions\":_vm.CatchesTakenData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"winner\":\"Sachin Tendulkar & Ricky Ponting are the winner in the following category\",\"titleText\":\"The total no. of catches taken is how good and ready as a fielder a player is.\",\"inference\":\"Catches Taken\"}})],1),_c('br'),_c('br'),_c('br'),_vm._m(1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-center\"},[_c('span',{staticClass:\"title-imp\"},[_vm._v(\"Factors determining the performance of players(Bowling) in ODI Match\")]),_c('hr'),_c('br'),_c('span',{staticClass:\"result-ps\"},[_c('b',[_vm._v(\"The following analysis is based on the fact that Sachin Tendulkar is predominantly a Batsman, however being a verstile player that he is \\n          his bowling career (as compared legends of his contemporary era batsman) showcases various known facts:-\\n        \")])]),_c('br'),_c('span',{staticClass:\"result-ps\"},[_vm._v(\"1. \"),_c('b',[_vm._v(\"High Bowling Strike rate\")])]),_c('span',{staticClass:\"result-ps\"},[_vm._v(\"2. \"),_c('b',[_vm._v(\"Less Economy Rate\")])]),_c('span',{staticClass:\"result-ps\"},[_vm._v(\"3. \"),_c('b',[_vm._v(\"low Bowling Average\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-bottom\"},[_c('h1',[_vm._v(\"  Elemental Conclusion - Bowling ODI\")]),_c('span',{staticClass:\"result\"},[_vm._v(\" Sachin Tendulkar Won most of the category \")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"bowling-odi\">\n\n    <div class=\"card-center\">\n          <span class=\"title-imp\">Factors determining the performance of players(Bowling) in ODI Match</span>\n          <hr>\n          <br>\n          <span class=\"result-ps\"> <b>The following analysis is based on the fact that Sachin Tendulkar is predominantly a Batsman, however being a verstile player that he is \n            his bowling career (as compared legends of his contemporary era batsman) showcases various known facts:-\n          </b>\n          </span>\n          <br>\n          \n          <span class=\"result-ps\">1. <b>High Bowling Strike rate</b> \n          </span>\n          <span class=\"result-ps\">2. <b>Less Economy Rate</b> \n          </span>\n          <span class=\"result-ps\" >3. <b>low Bowling Average</b> \n          </span>\n          \n        </div>\n\n\n      <div class=\"card\">\n            <PlayerDetailsCard :person=\"focusedPlayer\" />\n            <Chart\n            titleText=\"Bowling Strike Rate\"\n            subTitleText=\"Getting batsman out faster is primary target\"\n            chartType=\"bar\"\n            :chartData=\"StrikeRateData.data\"\n            :chartOptions=\"StrikeRateData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            winner=\"Both Michael Bevan & Sachin Tendulkar are winner in the following category\"\n           titleText=\"Bowling strike rate is a measure of how frequently a\n                       bowler achieves the primary goal of bowling, namely taking wickets \"\n            inference=  \"Bowling strike rate\"   \n            />\n            <br/>\n            \n        \n\n        </div>\n        <br>\n        <br>\n        <br>\n        \n\n\n\n      <div class=\"card\">\n            <Chart\n            titleText=\"Economy Rate\"\n            subTitleText=\"Lesser number of runs conceded symbolizes a good bowler\"\n            chartType=\"bar\"\n            :chartData=\"EconomyRateData.data\"\n            :chartOptions=\"EconomyRateData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            \n            winner=\"Brian Lara is the winner in the following category.\"\n            inference=\"Average runs conceded\"\n             titleText=\"Economy rate is the average number of runs conceded per over\n                      in cricket. The calculation is (Econ = Runs/Overs bowled).\"\n            />\n            <br>\n         </div>\n      <br>\n        <br>\n        <br>\n        \n\n\n\n      <div class=\"card\">\n            <Chart\n            titleText=\"Average Maiden Overs\"\n            subTitleText=\"Bowling a maiden over in ODI is very important and difficult\"\n            chartType=\"bar\"\n            :chartData=\"MaidenOverData.data\"\n            :chartOptions=\"MaidenOverData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            \n            <br>\n            <Inference\n            winner=\"Sir Viv Richards & Sachin Tendulkar are the winner in the following category\"\n           titleText=\"A maiden over is one in which no  runs are scored.\"\n            inference=\"High no. of Maiden over\"\n            />\n          </div>   \n       <br>\n        <br>\n        <br>\n        \n\n\n        <div class=\"card\">\n            <Chart\n            titleText=\"Bowling Average\"\n            subTitleText=\"Lower the bowling average is, the better the bowler is performing\"\n            chartType=\"bar\"\n            :chartData=\"WicketsRunsConcededData.data\"\n            :chartOptions=\"WicketsRunsConcededData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            winner=\"Sachin Tendulkar & Michael Bevan are the winner in the following category.\"\n            inference=\"Average runs conceded/Bowling Average\"\n            titleText=\"Number of wickets taken for runs  conceded in all matches.\"\n\n            />\n            <br>\n            \n      </div>\n      <br>\n        <br>\n        <br>\n        \n\n\n      <div class=\"card\">\n            <Chart\n            titleText=\"Catches Taken\"\n            subTitleText=\"More catches taken symbolizes a good fielder\"\n            chartType=\"bar\"\n            :chartData=\"CatchesTakenData.data\"\n            :chartOptions=\"CatchesTakenData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            winner=\"Sachin Tendulkar & Ricky Ponting are the winner in the following category\"\n           titleText=\"The total no. of catches taken is how good and ready as a fielder a player is.\"\n            inference=\"Catches Taken\"\n            />\n      </div>\n      <br>\n        <br>\n        <br>\n        \n     <div class=\"card-bottom\">\n          <h1>  Elemental Conclusion - Bowling ODI</h1>\n          <span class=\"result\"> Sachin Tendulkar Won most of the category </span>\n          \n        </div>\n\n\n  </div>\n</template>\n\n<script>\nimport Chart from '@/components/Chart.vue';\nimport Inference from '@/components/Inference.vue';\nimport PlayerDetailsCard from '@/components/PlayerDetailsCard.vue';\n\nimport locationBowlingODI from '../../json/locationbowlingODI.json';\nimport locationBatODI from '../../json/locationbattingODI.json';\n\nexport default {\n  name: 'bowlingODI',\n  components: {\n    Chart,\n    Inference,\n    PlayerDetailsCard,\n  },\n  data() {\n    return {\n      chartContainerStyle: {\n        margin: '10px',\n        width: '45vw',\n        display: 'inline-block',\n      },\n      EconomyRateData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      StrikeRateData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n          onClick: (evt, item) => {\n            if (item && item[0] && item[0]._index != null) {\n              this.focusedPlayer = locationBowlingODI[item[0]._index];\n            }\n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      MaidenOverData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      WicketsRunsConcededData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      CatchesTakenData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      focusedPlayer: null,\n    };\n  },\n  mounted() {\n    const economyRateData = [];\n    Object.values(locationBowlingODI).forEach((player) => {\n      economyRateData.push({\n        name: player.player_name,\n        economy_rate: player.details.total.economy_rate,\n      });\n    });\n    economyRateData.sort((t1, t2) => t1.economy_rate - t2.economy_rate);\n    this.EconomyRateData.data = {\n      labels: economyRateData.map(t => t.name),\n      datasets: [{\n        label: 'Avg Runs Conceded in all Matches',\n        data: economyRateData.map(t => t.economy_rate),\n        backgroundColor: [\n           'rgb(218,20,255)',\n          'rgb(57,255,20)',\n          'rgb(255,255,0)',\n          'rgb(0,255,255)',\n          'rgb(255,128,0)',\n          'rgb(235, 224, 255, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 0.8,\n        borderColor: [\n           'rgb(243,179,255)',\n          'rgb(12,79,0)',\n          'rgb(255,123,0)',\n          'rgb(0,107,255)',\n          'rgb(255,170,0)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(255, 99, 132, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(75, 192, 192, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n\n    const strikeRateData = [];\n    Object.values(locationBowlingODI).forEach((player) => {\n      strikeRateData.push({\n        name: player.player_name,\n        strike_rate: player.details.total.strike_rate,\n      });\n    });\n    strikeRateData.sort((t1, t2) => t2.strike_rate - t1.strike_rate);\n    this.StrikeRateData.data = {\n      labels: strikeRateData.map(t => t.name),\n      datasets: [{\n        label: 'Strike Rate',\n        data: strikeRateData.map(t => t.strike_rate),\n        backgroundColor: [\n          'rgb(218,20,255)',\n          'rgb(57,255,20)',\n          'rgb(255,255,0)',\n          'rgb(0,255,255)',\n          'rgb(255,128,0)',\n          'rgb(255, 245, 221, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 0.8,\n        borderColor: [\n          'rgb(243,179,255)',\n          'rgb(12,79,0)',\n          'rgb(255,123,0)',\n          'rgb(0,107,255)',\n          'rgb(255,170,0)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(75, 192, 192, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(255, 99, 132, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n\n    const maidenOverData = [];\n    Object.values(locationBowlingODI).forEach((player) => {\n      maidenOverData.push({\n        name: player.player_name,\n        maiden_overs: (player.details.total.maiden_overs / player.details.total.overs) * 100,\n      });\n    });\n    maidenOverData.sort((t1, t2) => t2.maiden_overs - t1.maiden_overs);\n    this.MaidenOverData.data = {\n      labels: maidenOverData.map(t => t.name),\n      datasets: [{\n        label: 'Percentage of Average Maiden Overs',\n        data: maidenOverData.map(t => t.maiden_overs),\n        backgroundColor: [\n          'rgb(218,20,255)',\n          'rgb(57,255,20)',\n          'rgb(255,255,0)',\n          'rgb(0,255,255)',\n          'rgb(255,128,0)',\n          'rgb(235, 224, 255, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 0.8,\n        borderColor: [\n           'rgb(243,179,255)',\n          'rgb(12,79,0)',\n          'rgb(255,123,0)',\n          'rgb(0,107,255)',\n          'rgb(255,170,0)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(255, 99, 132, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(75, 192, 192, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n\n    const wicketsRunsConcededData = [];\n    Object.values(locationBowlingODI).forEach((player) => {\n      wicketsRunsConcededData.push({\n        name: player.player_name,\n        wickets: (player.details.total.wickets / player.details.total.runs_conceded) * 100,\n      });\n    });\n    wicketsRunsConcededData.sort((t1, t2) => t1.wickets - t2.wickets);\n    this.WicketsRunsConcededData.data = {\n      labels: wicketsRunsConcededData.map(t => t.name),\n      datasets: [{\n        label: 'Percentage of wickets taken for runs conceded',\n        data: wicketsRunsConcededData.map(t => t.wickets),\n        backgroundColor: [\n          'rgb(218,20,255)',\n          'rgb(57,255,20)',\n          'rgb(255,255,0)',\n          'rgb(0,255,255)',\n          'rgb(255,128,0)',\n          'rgb(235, 224, 255, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 0.8,\n        borderColor: [\n           'rgb(243,179,255)',\n          'rgb(12,79,0)',\n          'rgb(255,123,0)',\n          'rgb(0,107,255)',\n          'rgb(255,170,0)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(255, 99, 132, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(75, 192, 192, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n\n    const catchesTakenData = [];\n    Object.values(locationBatODI).forEach((player) => {\n      catchesTakenData.push({\n        name: player.player_name,\n        catches_taken: player.details.total.catches_taken,\n      });\n    });\n    catchesTakenData.sort((t1, t2) => t2.catches_taken - t1.catches_taken);\n    this.CatchesTakenData.data = {\n      labels: catchesTakenData.map(t => t.name),\n      datasets: [{\n        label: 'Strike Rate',\n        data: catchesTakenData.map(t => t.catches_taken),\n        backgroundColor: [\n          'rgb(218,20,255)',\n          'rgb(57,255,20)',\n          'rgb(255,255,0)',\n          'rgb(0,255,255)',\n          'rgb(255,128,0)',\n          'rgb(255, 245, 221, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 0.8,\n        borderColor: [\n           'rgb(243,179,255)',\n          'rgb(12,79,0)',\n          'rgb(255,123,0)',\n          'rgb(0,107,255)',\n          'rgb(255,170,0)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(75, 192, 192, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(255, 99, 132, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n  },\n};\n</script>\n\n<style>\n.center {\n  text-align: center;\n}\n.tags {\n  margin-bottom: 100px;\n  font-size: 0px;\n  color: rgb(19, 20, 36)\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BowlingODI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BowlingODI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BowlingODI.vue?vue&type=template&id=f2fe30c6&\"\nimport script from \"./BowlingODI.vue?vue&type=script&lang=js&\"\nexport * from \"./BowlingODI.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BowlingODI.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","var render, staticRenderFns\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BowlingODI.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BowlingODI.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}