{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./src/views/BattingODI.vue?f923","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./src/components/PlayerDetailsCard.vue","webpack:///./src/views/BattingODI.vue?804c","webpack:///src/views/BattingODI.vue","webpack:///./src/views/BattingODI.vue?0305","webpack:///./src/views/BattingODI.vue"],"names":["fails","__webpack_require__","module","exports","method","arg","call","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BattingODI_vue_vue_type_style_index_0_id_cb80f122_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_BattingODI_vue_vue_type_style_index_0_id_cb80f122_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","$export","aFunction","toObject","$sort","sort","test","P","F","undefined","comparefn","this","render","staticRenderFns","_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_0__","script","component","Object","__webpack_exports__","_vm","_h","$createElement","_c","_self","staticClass","_m","attrs","person","focusedPlayerBatting","titleText","subTitleText","chartType","chartData","AvgOverInngsData","data","chartOptions","options","parentStyle","chartContainerStyle","winner","inference","HomeAwayScoreData","ConversionToCenturyData","ConversionToDoubleCenturyData","StrikeRateData","BoundariesData","_v","BattingODIvue_type_script_lang_js_","name","components","Chart","Inference","PlayerDetailsCard","_this","margin","width","display","responsive","scales","xAxes","stacked","maxBarThickness","gridLines","offsetGridLines","color","yAxes","onClick","evt","item","_index","locationbattingODI","labels","datasets","MomData","mounted","avgOverInngsData","values","forEach","player","push","player_name","avg","details","total","t1","t2","map","t","label","backgroundColor","borderWidth","borderColor","hoverBorderWidth","hoverBorderColor","homeAwayScoreData","awayAvg","away","homeAvg","home","conversionToCenturyData","hundreds","fifties","conversionToDoubleCenturyData","doublecentury","strikeRateData","strike_rate","boundariesData","fours","sixes","momData","mom","views_BattingODIvue_type_script_lang_js_","componentNormalizer"],"mappings":"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","file":"js/chunk-19030c84.4709a554.js","sourcesContent":["'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BattingODI.vue?vue&type=style&index=0&id=cb80f122&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BattingODI.vue?vue&type=style&index=0&id=cb80f122&scoped=true&lang=css&\"","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","var render, staticRenderFns\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"batting-odi\"},[_vm._m(0),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('PlayerDetailsCard',{attrs:{\"person\":_vm.focusedPlayerBatting}}),_c('Chart',{attrs:{\"titleText\":\"Average Runs Scored\",\"subTitleText\":\"A good average score of all matches is what makes a player dependable\",\"chartType\":\"bar\",\"chartData\":_vm.AvgOverInngsData.data,\"chartOptions\":_vm.AvgOverInngsData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"winner\":\"Sachin Tendulkar has the highest average run scored\",\"titleText\":\"Batting Average: Runs divided by (number of times out) = Runs divided by (Innings - Not Outs).\",\"inference\":\"Average Run\"}})],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Avg Runs Scored (Home vs Away)\",\"subTitleText\":\"According to a research, the players playing environment such as home ground or abroad ground plays a very important role, and the key \\n            factor of discussion is Motivation\",\"chartType\":\"horizontalBar\",\"chartData\":_vm.HomeAwayScoreData.data,\"chartOptions\":_vm.HomeAwayScoreData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"inference\":\"Average Run - Factor influencing confidence\",\"winner\":\"Sir Viv Richards is the game player in the following category\",\"titleText\":\"Motivation plays a key role in the performance of a player, and it is gained by audience watching the game especially the ground spectators \\n            who are rooting and cheering for their players.thus a player even with less cheering, if is able to play good, shows anything hardly matters to him on a personal level.\"}}),_c('br')],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Conversion of 50s to 100s\",\"subTitleText\":\"Let's find ability of a player to play big knocks and provide the team\\n                          with the winning runs\",\"chartType\":\"horizontalBar\",\"chartData\":_vm.ConversionToCenturyData.data,\"chartOptions\":_vm.ConversionToCenturyData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"inference\":\"50s and 100s\",\"winner\":\"Sachin Tendulkar is the winner in this league.\",\"titleText\":\"It is clearly evident that Sachin Tendulkar is the player who once settled,\\n                       goes for the big runs.\"}})],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Conversion rate 100s to 200s\",\"subTitleText\":\"A double century is rare and unique for a player\",\"chartType\":\"horizontalBar\",\"chartData\":_vm.ConversionToDoubleCenturyData.data,\"chartOptions\":_vm.ConversionToDoubleCenturyData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"inference\":\"Double century\",\"winner\":\"Sachin Tendulkar is leading in the following category\",\"titleText\":\"Only Sachin Tendulkar is the player made a double century in ODI.\"}})],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Strike Rate\",\"subTitleText\":\"Scoring runs faster in ODI is primary target\",\"chartType\":\"bar\",\"chartData\":_vm.StrikeRateData.data,\"chartOptions\":_vm.StrikeRateData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"winner\":\"Both Sir Viv Richards & Sachin Tendulkar secure the category\",\"inference\":\"High strike Rate\",\"titleText\":\"Higher strike rate is a must for performance packed game where target chase is extreme and run scoring is a must.Thus an individual with high \\n            strike rate is very useful for a team in that retrorespect.\"}})],1),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"card\"},[_c('Chart',{attrs:{\"titleText\":\"Number of 4's & 6's\",\"subTitleText\":\"A player who hits more boundaries will score runs faster\",\"chartType\":\"horizontalBar\",\"chartData\":_vm.BoundariesData.data,\"chartOptions\":_vm.BoundariesData.options,\"parentStyle\":_vm.chartContainerStyle}}),_c('Inference',{attrs:{\"inference\":\"King of Boundaries\",\"winner\":\"Sachin Tendulkar is the winner in the following category\",\"titleText\":\"Sachin Tendulkar likes to send the balls out of the ground, scoring most of his\\n                       runs with 4's & 6's\"}})],1),_c('br'),_c('br'),_c('br'),_vm._m(1),_c('br'),_c('br'),_c('br')])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-center\"},[_c('span',{staticClass:\"title-imp\"},[_vm._v(\"Factors determining the performance of players in ODI Match\")]),_c('hr'),_c('br'),_c('span',{staticClass:\"result-ps\"},[_vm._v(\"1. \"),_c('b',[_vm._v(\"Strike Rate\")]),_vm._v(\" plays an important role in the\\n            One Day format since it is equally important to score big runs as well\\n            score them fast\\n          \")]),_c('span',{staticClass:\"result-ps\"},[_vm._v(\"2. \"),_c('b',[_vm._v(\"Number of 6's and 4's\")]),_vm._v(\" provide runs faster\\n            compared to non-boundaries and hence are prefferable when you have to score fast\\n          \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"card-bottom\"},[_c('h1',[_vm._v(\"  Elemental Conclusion - Batting ODI\")]),_c('span',{staticClass:\"result\"},[_vm._v(\" Sachin Tendulkar Won most of the category \")])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"batting-odi\">\n\n        <div class=\"card-center\">\n          <span class=\"title-imp\">Factors determining the performance of players in ODI Match</span>\n          <hr>\n          <br>\n          <span class=\"result-ps\">1. <b>Strike Rate</b> plays an important role in the\n            One Day format since it is equally important to score big runs as well\n            score them fast\n          </span>\n          <span class=\"result-ps\">2. <b>Number of 6's and 4's</b> provide runs faster\n            compared to non-boundaries and hence are prefferable when you have to score fast\n          </span>\n        </div>\n        <br>\n        <br>\n        <br>\n\n       \n        <div class=\"card\">\n            <PlayerDetailsCard :person=\"focusedPlayerBatting\" />\n            <Chart\n            titleText=\"Average Runs Scored\"\n            subTitleText=\"A good average score of all matches is what makes a player dependable\"\n            chartType=\"bar\"\n            :chartData=\"AvgOverInngsData.data\"\n            :chartOptions=\"AvgOverInngsData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            winner=\"Sachin Tendulkar has the highest average run scored\"\n            titleText=\"Batting Average: Runs divided by (number of times out) = Runs divided by (Innings - Not Outs).\"\n            inference=\"Average Run\"\n            />\n        </div>\n        <br>\n        <br>\n        <br>\n        \n\n        <div class=\"card\">\n            <Chart\n            titleText=\"Avg Runs Scored (Home vs Away)\"\n            subTitleText=\"According to a research, the players playing environment such as home ground or abroad ground plays a very important role, and the key \n            factor of discussion is Motivation\"\n            chartType=\"horizontalBar\"\n            :chartData=\"HomeAwayScoreData.data\"\n            :chartOptions=\"HomeAwayScoreData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            inference=\"Average Run - Factor influencing confidence\"\n            winner=\"Sir Viv Richards is the game player in the following category\"\n            titleText=\"Motivation plays a key role in the performance of a player, and it is gained by audience watching the game especially the ground spectators \n            who are rooting and cheering for their players.thus a player even with less cheering, if is able to play good, shows anything hardly matters to him on a personal level.\"\n            />\n            <br/>\n            \n        </div>\n        <br>\n        <br>\n        <br>\n\n        <div class=\"card\">\n            <Chart\n            titleText=\"Conversion of 50s to 100s\"\n            subTitleText=\"Let's find ability of a player to play big knocks and provide the team\n                          with the winning runs\"\n            chartType=\"horizontalBar\"\n            :chartData=\"ConversionToCenturyData.data\"\n            :chartOptions=\"ConversionToCenturyData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            inference=\"50s and 100s\"\n            winner=\"Sachin Tendulkar is the winner in this league.\"\n            titleText=\"It is clearly evident that Sachin Tendulkar is the player who once settled,\n                       goes for the big runs.\"\n             /></div>\n        <br>\n        <br>\n        <br>\n        <div class=\"card\">\n            <Chart\n            titleText=\"Conversion rate 100s to 200s\"\n            subTitleText=\"A double century is rare and unique for a player\"\n            chartType=\"horizontalBar\"\n            :chartData=\"ConversionToDoubleCenturyData.data\"\n            :chartOptions=\"ConversionToDoubleCenturyData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            inference=\"Double century\"\n            winner=\"Sachin Tendulkar is leading in the following category\"\n            titleText=\"Only Sachin Tendulkar is the player made a double century in ODI.\"\n            />\n        </div>\n        <br>\n        <br>\n        <br>\n\n<div class=\"card\">\n            <Chart\n            titleText=\"Strike Rate\"\n            subTitleText=\"Scoring runs faster in ODI is primary target\"\n            chartType=\"bar\"\n            :chartData=\"StrikeRateData.data\"\n            :chartOptions=\"StrikeRateData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            winner=\"Both Sir Viv Richards & Sachin Tendulkar secure the category\"\n            inference=\"High strike Rate\"\n            titleText=\"Higher strike rate is a must for performance packed game where target chase is extreme and run scoring is a must.Thus an individual with high \n            strike rate is very useful for a team in that retrorespect.\"\n            />\n            \n            \n        </div>\n        <br>\n        <br>\n        <br>\n        <div class=\"card\">\n            <Chart\n            titleText=\"Number of 4's & 6's\"\n            subTitleText=\"A player who hits more boundaries will score runs faster\"\n            chartType=\"horizontalBar\"\n            :chartData=\"BoundariesData.data\"\n            :chartOptions=\"BoundariesData.options\"\n            :parentStyle=\"chartContainerStyle\"\n            />\n            <Inference\n            inference=\"King of Boundaries\"\n            winner=\"Sachin Tendulkar is the winner in the following category\"\n            titleText=\"Sachin Tendulkar likes to send the balls out of the ground, scoring most of his\n                       runs with 4's & 6's\"\n            />\n        </div>\n        <br>\n        <br>\n        <br>\n\n\n        <div class=\"card-bottom\">\n          <h1>  Elemental Conclusion - Batting ODI</h1>\n          <span class=\"result\"> Sachin Tendulkar Won most of the category </span>\n          \n        </div>\n        <br>\n        <br>\n        <br>\n\n    </div>\n</template>\n\n<script>\nimport Chart from '@/components/Chart.vue';\nimport Inference from '@/components/Inference.vue';\nimport PlayerDetailsCard from '@/components/PlayerDetailsCard.vue';\n\nimport location_bat_odi from '../../json/locationbattingODI.json';\n\nexport default {\n  name: 'battingODI',\n  components: {\n    Chart,\n    Inference,\n    PlayerDetailsCard,\n  },\n  data() {\n    return {\n      chartContainerStyle: {\n        margin: '100px',\n        width: '45vw',\n        display: 'inline-block',\n      },\n      AvgOverInngsData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n          onClick: (evt, item) => {\n            if (item && item[0] && item[0]._index != null) {\n              this.focusedPlayerBatting = location_bat_odi[item[0]._index];\n            }\n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      HomeAwayScoreData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      ConversionToCenturyData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      ConversionToDoubleCenturyData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      StrikeRateData: {\n        options: {\n          responsive: true,\n           scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n           \n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      BoundariesData: {\n        options: {\n          responsive: true,\n        scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      MomData: {\n        options: {\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              maxBarThickness: 70,\n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            yAxes: [{\n              stacked: true,\n              \n              gridLines: {\n                offsetGridLines: true,\n                color: 'rgba(255, 0, 0, 1)'\n              },\n            }],\n            \n          },\n        },\n        data: {\n          labels: [],\n          datasets: [],\n        },\n      },\n      focusedPlayerBatting: null,\n    };\n  },\n  mounted() {\n    const avgOverInngsData = [];\n    Object.values(location_bat_odi).forEach((player) => {\n      avgOverInngsData.push({\n        name: player.player_name,\n        avg: player.details.total.avg,\n      });\n    });\n    avgOverInngsData.sort((t1, t2) => t2.avg - t1.avg);\n    this.AvgOverInngsData.data = {\n      labels: avgOverInngsData.map(t => t.name),\n      datasets: [{\n        label: 'Average Runs of all Matches',\n        data: avgOverInngsData.map(t => t.avg),\n        backgroundColor: [\n          'rgb(218,20,255)',\n          'rgb(57,255,20)',\n          'rgb(255,255,0)',\n          'rgb(0,255,255)',\n          'rgb(255,128,0)',\n          'rgb(235, 224, 255, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 2,\n        borderColor: [\n          'rgb(243,179,255)',\n          'rgb(12,79,0)',\n          'rgb(255,123,0)',\n          'rgb(0,107,255)',\n          'rgb(255,170,0)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(255, 99, 132, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(75, 192, 192, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n\n    const homeAwayScoreData = [];\n    Object.values(location_bat_odi).forEach((player) => {\n      homeAwayScoreData.push({\n        name: player.player_name,\n        awayAvg: player.details.away.avg,\n        homeAvg: player.details.home.avg,\n      });\n    });\n    this.HomeAwayScoreData.data = {\n      labels: homeAwayScoreData.map(t => t.name),\n      datasets: [\n        {\n          label: 'Away',\n          data: homeAwayScoreData.map(t => t.awayAvg),\n          backgroundColor: 'rgb(0,213,255)',\n          borderWidth: 2,\n          borderColor: 'rgb(0,100,120)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(255, 99, 132, 1)',\n        },\n        {\n          label: 'Home',\n          data: homeAwayScoreData.map(t => t.homeAvg),\n          backgroundColor: 'rgb(255,105,105)',\n          borderWidth: 2,\n          borderColor: 'rgb(255,105,105)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(75, 192, 192, 1)',\n        }],\n    };\n\n    const conversionToCenturyData = [];\n    Object.values(location_bat_odi).forEach((player) => {\n      conversionToCenturyData.push({\n        name: player.player_name,\n        hundreds: player.details.total.hundreds,\n        fifties: player.details.total.fifties,\n      });\n    });\n    this.ConversionToCenturyData.data = {\n      labels: conversionToCenturyData.map(t => t.name),\n      datasets: [\n        {\n          label: 'Half Century',\n          data: conversionToCenturyData.map(t => t.fifties),\n          backgroundColor: 'rgb(0,213,255)',\n          borderWidth: 0.5,\n          borderColor: 'rgb(0,100,120)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(255, 99, 132, 1)',\n        },\n        {\n          label: 'Century',\n          data: conversionToCenturyData.map(t => t.hundreds),\n          backgroundColor: 'rgb(255,105,105)',\n          borderWidth: 0.5,\n          borderColor: 'rgb(255,105,105)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(75, 192, 192, 1)',\n        },\n      ],\n    };\n\n    const conversionToDoubleCenturyData = [];\n    Object.values(location_bat_odi).forEach((player) => {\n      conversionToDoubleCenturyData.push({\n        name: player.player_name,\n        hundreds: player.details.total.hundreds,\n        doublecentury: player.details.total.doublecentury,\n      });\n    });\n    this.ConversionToDoubleCenturyData.data = {\n      labels: conversionToDoubleCenturyData.map(t => t.name),\n      datasets: [\n        {\n          label: 'Century',\n          data: conversionToDoubleCenturyData.map(t => t.hundreds),\n          backgroundColor: 'rgb(0,213,255)',\n          borderWidth: 0.5,\n          borderColor: 'rgb(0,100,120)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(255, 159, 64, 1)',\n        },\n        {\n          label: 'Double Century',\n          data: conversionToDoubleCenturyData.map(t => t.doublecentury),\n          backgroundColor: 'rgb(255,105,105)',\n          borderWidth: 0.5,\n          borderColor: 'rgb(255,105,105)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(54, 162, 235, 1)',\n        },\n      ],\n    };\n\n    const strikeRateData = [];\n    Object.values(location_bat_odi).forEach((player) => {\n      strikeRateData.push({\n        name: player.player_name,\n        strike_rate: player.details.total.strike_rate,\n      });\n    });\n    strikeRateData.sort((t1, t2) => t2.strike_rate - t1.strike_rate);\n    this.StrikeRateData.data = {\n      labels: strikeRateData.map(t => t.name),\n      datasets: [{\n        label: 'Strike Rate',\n        data: strikeRateData.map(t => t.strike_rate),\n        backgroundColor: [\n          'rgb(218,20,255)',\n          'rgb(57,255,20)',\n          'rgb(255,255,0)',\n          'rgb(0,255,255)',\n          'rgb(255,128,0)',,\n          'rgb(255, 245, 221, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 0.8,\n        borderColor: [\n          'rgb(243,179,255)',\n          'rgb(12,79,0)',\n          'rgb(255,123,0)',\n          'rgb(0,107,255)',\n          'rgb(255,170,0)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(75, 192, 192, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(255, 99, 132, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n\n    const boundariesData = [];\n    Object.values(location_bat_odi).forEach((player) => {\n      boundariesData.push({\n        name: player.player_name,\n        fours: player.details.total.fours,\n        sixes: player.details.total.sixes,\n      });\n    });\n    this.BoundariesData.data = {\n      labels: boundariesData.map(t => t.name),\n      datasets: [\n        {\n          label: 'Fours',\n          data: boundariesData.map(t => t.fours),\n          backgroundColor: 'rgb(0,213,255)',\n          borderWidth: 0.5,\n          borderColor: 'rgb(0,100,120)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(255, 159, 64, 1)',\n        },\n        {\n          label: 'Sixes',\n          data: boundariesData.map(t => t.sixes),\n          backgroundColor: 'rgb(255,105,105)',\n          borderWidth: 0.5,\n          borderColor: 'rgb(255,105,105)',\n          hoverBorderWidth: 1,\n          hoverBorderColor: 'rgb(54, 162, 235, 1)',\n        },\n      ],\n    };\n\n    const momData = [];\n    Object.values(location_bat_odi).forEach((player) => {\n      momData.push({\n        name: player.player_name,\n        mom: player.details.total.mom,\n      });\n    });\n    momData.sort((t1, t2) => t2.mom - t1.mom);\n    this.MomData.data = {\n      labels: momData.map(t => t.name),\n      datasets: [{\n        label: 'Man of Match',\n        data: momData.map(t => t.mom),\n        backgroundColor: [\n          'rgb(255, 224, 230, 0.5)',\n          'rgb(215, 236, 251, 0.5)',\n          'rgb(255, 226, 217, 0.5)',\n          'rgb(255, 245, 221, 0.5)',\n          'rgb(219, 242, 242, 0.5)',\n          'rgb(235, 224, 255, 0.5)',\n          'rgb(244, 245, 245, 0.5)',\n        ],\n        borderWidth: 0.8,\n        borderColor: [\n          'rgb(255, 99, 132, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(75, 192, 192, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n        hoverBorderWidth: 1.2,\n        hoverBorderColor: [\n          'rgb(255, 99, 132, 1)',\n          'rgb(54, 162, 235, 1)',\n          'rgb(255, 159, 64, 1)',\n          'rgb(255, 205, 86, 1)',\n          'rgb(75, 192, 192, 1)',\n          'rgb(153, 102, 255, 1)',\n          'rgb(201, 203, 207, 1)',\n        ],\n      }],\n    };\n  },\n};\n</script>\n\n<style scoped>\n.tags {\n  margin-bottom: 25px;\n  font-size: 0px;\n  color:rgb(19, 20, 36);\n\n  \n}\n.batting-odi{\n  background-color: rgb(19, 20, 36);\n  color: azure\n}\n\n.bottomtags {\n  margin-top: px;\n  color:rgb(19, 20, 36);\n}\n\n.center {\n  text-align: center;\n  color: azure\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BattingODI.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BattingODI.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BattingODI.vue?vue&type=template&id=cb80f122&scoped=true&\"\nimport script from \"./BattingODI.vue?vue&type=script&lang=js&\"\nexport * from \"./BattingODI.vue?vue&type=script&lang=js&\"\nimport style0 from \"./BattingODI.vue?vue&type=style&index=0&id=cb80f122&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cb80f122\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}